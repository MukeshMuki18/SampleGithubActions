name: Process POS API Issue

on:
  issues:
    types: [opened]

jobs:
  extract-fields:
    runs-on: ubuntu-latest
    outputs:
      season: ${{ steps.extract.outputs.season }}
      department: ${{ steps.extract.outputs.department }}
      articleCount: ${{ steps.extract.outputs.articleCount }}
      promotion: ${{ steps.extract.outputs.promotion }}
    steps:
      - name: Extract issue details using Bash
        id: extract
        run: |
          echo "Extracting fields from issue body..."

          ISSUE_BODY=$(echo "${{ github.event.issue.body }}" | tr -d '\r')

          # Function to extract values using Bash regex
          extract_value() {
              local key="$1"
              if [[ "$ISSUE_BODY" =~ $key:[[:space:]]*([0-9a-zA-Z_]+) ]]; then
                  echo "${BASH_REMATCH[1]}"
              else
                  echo "N/A"
              fi
          }

          SEASON=$(extract_value "Season")
          DEPARTMENT=$(extract_value "Department")
          ARTICLE_COUNT=$(extract_value "ArticleCount")
          PROMOTION=$(extract_value "Promotion")

          echo "Extracted values:"
          echo "Season: $SEASON"
          echo "Department: $DEPARTMENT"
          echo "ArticleCount: $ARTICLE_COUNT"
          echo "Promotion: $PROMOTION"

          # Set outputs for next job
          echo "::set-output name=season::$SEASON"
          echo "::set-output name=department::$DEPARTMENT"
          echo "::set-output name=articleCount::$ARTICLE_COUNT"
          echo "::set-output name=promotion::$PROMOTION"

  write-to-file:
    runs-on: pos
    needs: extract-fields
    steps:
      - name: Create and write issue details to file
        run: |
          echo "Season: ${{ needs.extract-fields.outputs.season }}" > issue_output.txt
          echo "Department: ${{ needs.extract-fields.outputs.department }}" >> issue_output.txt
          echo "ArticleCount: ${{ needs.extract-fields.outputs.articleCount }}" >> issue_output.txt
          echo "Promotion: ${{ needs.extract-fields.outputs.promotion }}" >> issue_output.txt

      - name: Copy the file to local
        run: |
          copy issue_output.txt "C:\Users\MUKESH\Downloads\issue_output.txt"
  close-issue:
    runs-on: ubuntu-latest
    needs: write-to-file
    steps:
      - name: Close the issue
        run: |
          gh issue close ${{ github.event.issue.number }} --repo ${{ github.repository }} --reason completed
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
