name: Process POS API Issue

on:
  issues:
    types: [opened]

jobs:
  extract-fields:
    runs-on: ubuntu-latest
    outputs:
      season: ${{ steps.extract.outputs.season }}
      department: ${{ steps.extract.outputs.department }}
      articleCount: ${{ steps.extract.outputs.articleCount }}
      promotion: ${{ steps.extract.outputs.promotion }}
    steps:
      - name: Extract issue details
        id: extract
        run: |
          echo "Extracting fields from issue body..."
          
          season=$(echo '${{ github.event.issue.body }}' | grep -oP '(?<=Season:\s*)\d+')
          department=$(echo '${{ github.event.issue.body }}' | grep -oP '(?<=Department:\s*)\d+')
          articleCount=$(echo '${{ github.event.issue.body }}' | grep -oP '(?<=ArticleCount:\s*)\d+')
          promotion=$(echo '${{ github.event.issue.body }}' | grep -oP '(?<=promotion:\s*)\d+')

          echo "Extracted values:"
          echo "Season: $season"
          echo "Department: $department"
          echo "ArticleCount: $articleCount"
          echo "Promotion: $promotion"

          # Set environment variables for next job
          echo "season=$season" >> $GITHUB_ENV
          echo "department=$department" >> $GITHUB_ENV
          echo "articleCount=$articleCount" >> $GITHUB_ENV
          echo "promotion=$promotion" >> $GITHUB_ENV
          
          # Set outputs for the next job
          echo "::set-output name=season::$season"
          echo "::set-output name=department::$department"
          echo "::set-output name=articleCount::$articleCount"
          echo "::set-output name=promotion::$promotion"

  write-to-file:
    runs-on: pos
    needs: extract-fields
    steps:
      - name: Create and write issue details to file
        run: |
          echo "Season: ${{ needs.extract-fields.outputs.season }}" > issue_output.txt
          echo "Department: ${{ needs.extract-fields.outputs.department }}" >> issue_output.txt
          echo "ArticleCount: ${{ needs.extract-fields.outputs.articleCount }}" >> issue_output.txt
          echo "Promotion: ${{ needs.extract-fields.outputs.promotion }}" >> issue_output.txt

      - name: Upload the output file
        uses: actions/upload-artifact@v4
        with:
          name: issue_output
          path: issue_output.txt
  close-issue:
    runs-on: ubuntu-latest
    needs: write-to-file
    steps:
      - name: Close the issue
        run: |
          gh issue close ${{ github.event.issue.number }} --repo ${{ github.repository }} --reason completed
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
